 //slowrush
using System;

namespace prime
{
    public class GFG
    {

        public static void SieveOfEratosthenes(int n)            //formula->
        {

            // Create boolean array(truefalse) "prime[0..n]" and initialize
            // all entries true. value in prime[i
            // Be false if [i] is not a prime, else true. 

            bool[] prime = new bool[n + 1];

            for (int i = 0; i < n; i++)
                prime[i] = true;

            for (int p = 2; p * p <= n; p++)
            {
                // If prime[p] is not changed, 
                // then its a prime 
                if (prime[p] == true)
                {
                    // Update all multiples of p 
                    for (int i = p * p; i <= n; i += p)
                        prime[i] = false;
                }
            }

            // Print all prime numbers 
            for (int i = 2; i <= n; i++)
            {
                if (prime[i] == true)
                    Console.Write(i + " ");
            }

        }

        // Driver code 
        public static void Main()
        {
            string k;
            int n;
            Console.WriteLine("Please Enter Number");
            k = Console.ReadLine();
            n = Int16.Parse(k);
            Console.WriteLine("Following are the prime numbers");
            Console.WriteLine("smaller than or equal to " + n);
            SieveOfEratosthenes(n);

        }
    }
}
